@model TasarimProjesi.Models.Purchasing

@{
	ViewData["Title"] = "Yeni Sipariş";
}
<h2>Yeni Sipariş</h2>
<hr />
<div class="mx-auto pt-0 p-0">
	<div>
		<form ID="AppForm" enctype="multipart/form-data" asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div>
				<table id="Table" class="table table-striped table-sm ">
					<thead>
						<tr>
							<th>
								<button id="btnadd" type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem(this)">Ekle</button>
							</th>
							<th>
								Ürün
							</th>
							<th>
								Miktar
							</th>
							<th>
								Birim
							</th>
							<th>
								Marka
							</th>
							<th>
								Birim Fiyat	
							</th>
							<th>
								Para Birimi
							</th>
						</tr>
					</thead>
					<tbody>

						@for (int i = 0; i < Model.Items.Count; i++)
						{
							<tr>
								<td>
									<button id="btnremove-@i" type="button" class="btn btn-sm btn-danger visible" onclick="DeleteItem(this)">&nbsp;&nbsp;Sil&nbsp;&nbsp;</button>
								</td>
								<td>
									<input asp-for="@Model.Items[i].Product" class="form-control">
									<span asp-validation-for="@Model.Items[i].Product" class="text-danger"></span>
								</td>
								<td>
									<input asp-for="@Model.Items[i].Amount" class="form-control">
									<span asp-validation-for="@Model.Items[i].Amount" class="text-danger"></span>
								</td>
								<td>
									<input asp-for="@Model.Items[i].Unit" class="form-control">
									<span asp-validation-for="@Model.Items[i].Unit" class="text-danger"></span>
								</td>
								<td>
									<input asp-for="@Model.Items[i].Brand" class="form-control">
									<span asp-validation-for="@Model.Items[i].Brand" class="text-danger"></span>
								</td>
								<td>
									<input asp-for="@Model.Items[i].Price" class="form-control">
									<span asp-validation-for="@Model.Items[i].Price" class="text-danger"></span>
								</td>
								<td>
									<select asp-for="@Model.Items[i].Currency" onchange="calculateSum()" asp-items="Html.GetEnumSelectList<Currency>()" class="form-control currency">
										<option selected="selected" value="5">Seçin!</option>
									</select>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
			<div class="form-group">
				<br />
				<input type="submit" value="Siparişi Oluştur" class="btn btn-danger" />
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script type="text/javascript">

		function DeleteItem(btn) {
			var table = document.getElementById('Table');
			var rows = table.getElementsByTagName('tr');
			if (rows.length == 2) {
				alert("Bu Satır Silinemez. En Az 1 Sipariş Olmalı.")
				return;
			}
			$(btn).closest('tr').remove();
		}

		$.validator.methods.range = function (value, element, param) {
			var globalizedValue = value.replace(",", ".");
			return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
		}
		$.validator.methods.number = function (value, element) {
			return this.optional(element) || /^-?(?:\d+)(?:,\d+)?$/.test(value);
		}

		function AddItem(btn) {
			var table = document.getElementById('Table');
			var rows = table.getElementsByTagName('tr');

			var rowOuterHtml = rows[rows.length - 1].outerHTML;

			var lastrowIdx = rows.length - 2;
			var nextrowIdx = eval(lastrowIdx) + 1;

			rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
			rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
			rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);
			var newRow = table.insertRow();
			newRow.innerHTML = rowOuterHtml;

			var btnAddID = btn.id;
			var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');

			var delbtn = document.getElementById(btnDeleteid);
			delbtn.classList.add("visible");
			delbtn.classList.remove("invisible");

			var addbtn = document.getElementById(btnAddID);
			addbtn.classList.remove("visible");
			addbtn.classList.add("invisible");
		}

		function rebindvalidators() {
			var $form = $("#AppForm");
			$form.unbind();
			$form.data("validator", null);
			$.validator.unobtrusive.parse($form);
			$form.validate($form.data("unobtrusiveValidation").options);
		}
	</script>

}


